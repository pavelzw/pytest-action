name: 'Run pytest'
description: GitHub Action to run pytest tests with GitHub Job Summaries support.
author: Pavel Zwerschke
branding: 
  icon: file-text
  color: 'blue'
inputs:
  job-summary:
    description: Print a GitHub job summary
    required: false
    default: 'true'
  verbose:
    description: Verbose output
    required: false
    default: 'true'
  emoji:
    description: Use emojis in the output
    required: false
    default: 'true'
  custom-arguments:
    description: Custom arguments to pass to pytest
    required: false
    default: ''
  custom-pytest:
    description: Custom command to replace the `pytest` call. Can be a custom executable or something like `poetry run pytest` or `micromamba run -n myenv pytest`.
    required: false
    default: 'pytest'
  report-title:
    description: Title of the report
    required: false
    default: 'Test Report'
  click-to-expand:
    description: Add 'Click to expand' to the report
    required: false
    default: 'true'
runs:
  using: "composite"
  steps:
    - name: Run pytest
      run: |
        args=()
        if [ ${{ inputs.verbose }} = true ]; then args+=('-v'); fi
        if [ ${{ inputs.job-summary }} = true ]; then args+=('--md=report.md'); fi
        if [ ${{ inputs.emoji }} = true ]; then args+=('--emoji'); fi
        # unpack custom arguments from spaces to array
        args+=(`echo "${{ inputs.custom-arguments }}"`)
        echo "::group::Run pytest ${args[@]}"
        ${{ inputs.custom-pytest }} "${args[@]}"
        echo "::endgroup::"
      shell: bash -el {0}  # use login shell to source .bashrc for environments
    - name: Add report to summary
      # run even if pytest fails
      if: always() && inputs.job-summary == 'true'
      run: |
        sed -i 's/# Test Report/# ${{ inputs.report-title }}/' report.md
        if [ ${{ inputs.click-to-expand }} = true ]; then
          sed -i '2i <details><summary>Click to expand!</summary>' report.md
          sed -i '$a</details>' report.md
        fi
        cat report.md >> $GITHUB_STEP_SUMMARY
      shell: bash
